[package]
name = "autogen-core"
version.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
keywords.workspace = true
categories.workspace = true
rust-version.workspace = true
description = "Foundational interfaces and agent runtime implementation for AutoGen"
readme = "README.md"

[dependencies]
# Core dependencies (always included)
serde = { workspace = true }
thiserror = { workspace = true }
uuid = { workspace = true }
async-trait = { workspace = true }
chrono = { workspace = true, features = ["serde"] }

# JSON serialization (optional)
serde_json = { workspace = true, optional = true }

# Async runtime (optional)
tokio = { workspace = true, optional = true }
tokio-util = { workspace = true, optional = true }
futures = { workspace = true, optional = true }

# Serialization formats (optional)
prost = { workspace = true, optional = true }
prost-types = { workspace = true, optional = true }

# Error handling (optional)
anyhow = { workspace = true, optional = true }

# Tracing and telemetry (optional)
tracing = { workspace = true, optional = true }
opentelemetry = { workspace = true, optional = true }
opentelemetry-semantic-conventions = { workspace = true, optional = true }

# Utilities (optional)
url = { workspace = true, optional = true }
bytes = { workspace = true, optional = true }
dashmap = { workspace = true, optional = true }
regex = { workspace = true, optional = true }

# HTTP client (optional)
reqwest = { workspace = true, optional = true }

# Image processing (optional)
image = { workspace = true, optional = true }

# Configuration (optional)
config = { workspace = true, optional = true }
toml = { workspace = true, optional = true }

# JSON Schema validation (optional)
jsonschema = { version = "0.17", optional = true }

[dev-dependencies]
tokio-test = { workspace = true }
mockall = { workspace = true }
criterion = { workspace = true }

[features]
default = ["runtime", "json", "validation"]

# === Core Features ===
# Essential runtime functionality
runtime = ["tokio", "tokio-util", "futures", "anyhow"]
# JSON serialization support
json = ["serde_json"]
# Input validation and schema checking
validation = ["jsonschema", "regex"]

# === Serialization Features ===
# Protocol Buffer support
protobuf = ["prost", "prost-types"]
# All serialization formats
all-serialization = ["json", "protobuf"]

# === Networking Features ===
# HTTP client functionality
http = ["reqwest", "url", "bytes"]
# Complete networking stack
networking = ["http", "runtime"]

# === Observability Features ===
# Basic tracing support
tracing = ["dep:tracing", "runtime"]
# Full telemetry with OpenTelemetry
telemetry = ["tracing", "opentelemetry", "opentelemetry-semantic-conventions", "runtime"]

# === Content Processing Features ===
# Image processing capabilities
images = ["image"]

# === Configuration Features ===
# Configuration file support
config-support = ["config", "toml"]

# === Development Features ===
# Testing utilities and helpers
testing = ["anyhow", "dashmap", "runtime"]

# === Convenience Feature Combinations ===
# Complete feature set for production use
full = [
    "runtime",
    "all-serialization",
    "networking",
    "telemetry",
    "images",
    "config-support",
    "validation",
    "testing"
]

# Minimal feature set for embedded environments
minimal = ["json"]

# Standard feature set for most applications
standard = ["runtime", "json", "validation", "http"]

# Server-oriented feature set
server = ["runtime", "all-serialization", "networking", "telemetry", "validation"]

# Client-oriented feature set
client = ["runtime", "json", "http", "validation"]

[[example]]
name = "basic_tool_usage"
required-features = ["json", "runtime"]

[[example]]
name = "performance_optimization"
required-features = ["json", "runtime"]

[[example]]
name = "error_handling"
required-features = ["runtime"]

[[example]]
name = "advanced_patterns"
required-features = ["json", "runtime"]
